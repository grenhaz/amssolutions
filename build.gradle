plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.6'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'jacoco'
}

group = 'com.amssolutions'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

configurations.all {
	resolutionStrategy {
		force "com.squareup.okhttp3:okhttp:4.10.0"
		force "com.squareup.okhttp3:mockwebserver:4.10.0"
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.3'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    
	testImplementation 'com.squareup.okhttp3:okhttp'
    testImplementation 'com.squareup.okhttp3:mockwebserver'
    testImplementation 'org.jetbrains.kotlin:kotlin-stdlib:1.4.0'
}

tasks.named('test') {
    finalizedBy jacocoTestReport
}
jacocoTestReport {
    dependsOn test
    
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
            	"**/PruebaApplication.class",
            	"**/exception/*",
                "**/dto/*"
            ])
        }))
    }
}

jacoco {
    toolVersion = "0.8.7"
    reportsDir = file("$buildDir/jacoco")
}

tasks.named('test') {
	useJUnitPlatform()
}

